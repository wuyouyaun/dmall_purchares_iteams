{"name": "test_preview_pdf_40", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <case.VC_project.Annual_contract.test_annual_contract.Test_check_pdf_list object at 0x000001F06B2811D0>, login_xadmin = <requests.sessions.Session object at 0x000001F06B2677B8>\n\n    def test_preview_pdf_40(self, login_xadmin):                 # 合同预览 prd预览\n        '''\n        存在有效的合同编号，点击预览，预览prd\n        '''\n        s = login_xadmin\n>       preview_pdf(s,contractNo=20091500002)\n\nVC_project\\Annual_contract\\test_annual_contract.py:466: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nVC_project\\Annual_contract\\annuals_contract.py:150: in preview_pdf\n    logger.debug(\"返回日志：%s\" % r.json())\nd:\\python3\\lib\\site-packages\\requests\\models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\nd:\\python3\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nd:\\python3\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000001F06967F358>\ns = '<!doctype html><html lang=\"en\"><head><title>HTTP Status 500 – Internal Server Error</title><style type=\"text/css\">h1 ...e of the root cause is available in the server logs.</p><hr class=\"line\" /><h3>Apache Tomcat/8.5.45</h3></body></html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nd:\\python3\\lib\\json\\decoder.py:357: JSONDecodeError"}, "description": "\n        存在有效的合同编号，点击预览，预览prd\n        ", "start": 1604303473420, "stop": 1604303473561, "uuid": "62d31b9f-c670-4fb3-b0ef-e81813d51509", "historyId": "c2d89224c9d00b64201d606cf1db39aa", "testCaseId": "c1b11bf57ea7d87fb9af30dd403cc4e6", "fullName": "VC_project.Annual_contract.test_annual_contract.Test_check_pdf_list#test_preview_pdf_40", "labels": [{"name": "parentSuite", "value": "VC_project.Annual_contract"}, {"name": "suite", "value": "test_annual_contract"}, {"name": "subSuite", "value": "Test_check_pdf_list"}, {"name": "host", "value": "DESKTOP-M9P26OI"}, {"name": "thread", "value": "43116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "VC_project.Annual_contract.test_annual_contract"}]}